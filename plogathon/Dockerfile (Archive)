# Stage 1 - Install dependencies and build the app in a build environment
FROM ubuntu:latest AS builder

# Install flutter dependencies
RUN apt-get update && \
    apt-get install -y curl git wget unzip libgconf-2-4 gdb libstdc++6 libglu1-mesa fonts-droid-fallback lib32stdc++6 python3 sed openjdk-8-jdk && \
    apt-get clean

# Set up new user
RUN useradd -ms /bin/bash developer
USER developer
WORKDIR /home/developer

# Prepare Android directories and system variables
RUN mkdir -p Android/sdk
ENV ANDROID_SDK_ROOT /home/developer/Android/sdk
RUN mkdir -p .android && touch .android/repositories.cfg

# Set up Android SDK
RUN wget -O sdk-tools.zip https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip && \
    unzip sdk-tools.zip && \
    rm sdk-tools.zip && \
    mv tools Android/sdk/tools

# Accept Android SDK licenses
RUN cd Android/sdk/tools/bin && yes | ./sdkmanager --licenses

# Install Android SDK components
RUN cd Android/sdk/tools/bin && \
    ./sdkmanager "build-tools;34.0.0" "platform-tools" "platforms;android-34" "sources;android-34"

# Set Android SDK PATH
ENV PATH "$PATH:/home/developer/Android/sdk/platform-tools"

# Download flutter
RUN git clone https://github.com/flutter/flutter.git
ENV PATH "$PATH:/home/developer/flutter/bin"

# Set Flutter and Dart SDK paths
ENV FLUTTER_HOME /usr/local/flutter
ENV DART_HOME $FLUTTER_HOME/bin/cache/dart-sdk
ENV PATH $FLUTTER_HOME/bin:$DART_HOME/bin:$PATH

# Switch to OpenJDK 11
USER root
RUN apt-get install -y openjdk-11-jdk && \
    update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
USER developer

# Specify Flutter and Dart versions
ENV FLUTTER_VERSION stable
ENV DART_VERSION stable

RUN flutter channel $FLUTTER_VERSION && \
    flutter upgrade && \
    flutter --version && \
    dart --version

# Create a working directory for the app
WORKDIR /app

# Copy all of the app to the working directory
COPY . .

# Change ownership of the working directory to the 'developer' user
USER root
RUN chown -R developer:developer /app

# Download the dependencies
USER developer
RUN flutter pub get
RUN flutter pub upgrade

# Build the release version of the app
RUN flutter build apk --release

# Cleanup unnecessary files
USER root
RUN apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
USER developer

# Stage 2 - Use a smaller base image for the final image
FROM alpine:latest

# Copy the built app to the final image
COPY --from=builder /app/build/app/outputs/flutter-apk/app-release.apk /app/app.apk

# Start the app when the container starts
CMD ["java", "-jar", "/app/app.apk"]
